{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/agarw/OneDrive/Desktop/Timetable%20management/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/agarw/OneDrive/Desktop/Timetable%20management/src/app/timetable/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '@/context/auth-context';\nimport { useRealtime } from '@/context/realtime-context';\nimport { AdminOnly } from '@/components/role-guard';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport { Calendar, Clock, MapPin, User, BookOpen, School, Play, Square, Bell, CheckCircle } from 'lucide-react';\n\n// Available subjects for timetable display\nconst availableSubjects = [\n  { id: 'math', name: 'Mathematics', code: 'MATH101', type: 'lecture' },\n  { id: 'physics', name: 'Physics', code: 'PHY101', type: 'lecture' },\n  { id: 'chemistry', name: 'Chemistry', code: 'CHEM101', type: 'lecture' },\n  { id: 'cs', name: 'Computer Science', code: 'CS101', type: 'lecture' },\n  { id: 'cslab', name: 'Computer Science Lab', code: 'CS101L', type: 'lab' },\n  { id: 'english', name: 'English', code: 'ENG101', type: 'lecture' },\n  { id: 'economics', name: 'Economics', code: 'ECO101', type: 'lecture' },\n  { id: 'statistics', name: 'Statistics', code: 'STAT101', type: 'lecture' }\n];\n\n// Professional Academic Timetable Component\nfunction ProfessionalTimetableGrid({ schedule, availableSubjects }) {\n  const timeSlots = [\n    { time: '9:10 AM - 9:25 AM', label: 'Mentor Time', type: 'mentor' },\n    { time: '9:30 AM - 10:25 AM', label: '1st', type: 'lecture' },\n    { time: '10:30 AM - 11:25 AM', label: '2nd', type: 'lecture' },\n    { time: '11:30 AM - 12:25 PM', label: '3rd', type: 'lecture' },\n    { time: '12:30 PM - 1:25 PM', label: '4th', type: 'lecture' },\n    { time: '1:25 PM - 2:25 PM', label: 'Lunch Break', type: 'break' },\n    { time: '2:30 PM - 3:25 PM', label: '5th', type: 'lecture' },\n    { time: '3:30 PM - 4:25 PM', label: '6th', type: 'lecture' },\n  ];\n\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n  // Create schedule map for quick lookup\n  const scheduleMap = new Map();\n  if (schedule && Array.isArray(schedule)) {\n    schedule.forEach(item => {\n      const key = `${item.day}-${item.slot}`;\n      scheduleMap.set(key, item);\n    });\n  }\n\n  return (\n    <div className=\"bg-white shadow-2xl border-2 border-indigo-200 overflow-hidden rounded-2xl\">\n      {/* Enhanced Header Section with Gradient */}\n      <div className=\"bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 text-white p-8 relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/20 via-purple-500/20 to-pink-500/20\"></div>\n        <div className=\"relative z-10\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-6\">\n              <div className=\"w-20 h-20 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center border-2 border-white/30\">\n                <School className=\"w-12 h-12 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-white leading-tight\">\n                  College of Computing Sciences and Information Technology\n                </h1>\n                <p className=\"text-indigo-100 mt-2 text-lg font-medium\">\n                  B.Tech (Artificial Intelligence, Machine Learning & Data Science) 3rd Semester (B)\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          {/* Enhanced Academic Info with Cards */}\n          <div className=\"mt-6 grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-lg p-3 border border-white/20\">\n              <div className=\"text-indigo-200 text-xs font-medium\">Academic Year</div>\n              <div className=\"text-white font-bold text-lg\">2024-25</div>\n            </div>\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-lg p-3 border border-white/20\">\n              <div className=\"text-purple-200 text-xs font-medium\">Semester</div>\n              <div className=\"text-white font-bold text-lg\">3rd</div>\n            </div>\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-lg p-3 border border-white/20\">\n              <div className=\"text-pink-200 text-xs font-medium\">Section</div>\n              <div className=\"text-white font-bold text-lg\">B</div>\n            </div>\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-lg p-3 border border-white/20\">\n              <div className=\"text-blue-200 text-xs font-medium\">Effective From</div>\n              <div className=\"text-white font-bold text-sm\">{new Date().toLocaleDateString()}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Main Timetable */}\n      <div className=\"overflow-x-auto bg-gradient-to-br from-gray-50 to-blue-50 p-4\">\n        <table className=\"w-full border-collapse shadow-lg rounded-lg overflow-hidden\">\n          {/* Enhanced Header Row */}\n          <thead>\n            <tr>\n              <th className=\"border-2 border-indigo-300 bg-gradient-to-r from-indigo-500 to-purple-500 text-white p-4 text-center font-bold text-sm min-w-[120px] shadow-md\">\n                <div className=\"flex items-center justify-center gap-2\">\n                  <Clock className=\"w-4 h-4\" />\n                  HOURS\n                </div>\n              </th>\n              {days.map((day, index) => {\n                const dayColors = [\n                  'from-red-500 to-pink-500',\n                  'from-orange-500 to-yellow-500', \n                  'from-green-500 to-emerald-500',\n                  'from-blue-500 to-cyan-500',\n                  'from-purple-500 to-violet-500',\n                  'from-pink-500 to-rose-500'\n                ];\n                return (\n                  <th key={day} className={`border-2 border-indigo-300 bg-gradient-to-r ${dayColors[index]} text-white p-4 text-center font-bold text-sm min-w-[140px] shadow-md`}>\n                    <div className=\"flex items-center justify-center gap-2\">\n                      <Calendar className=\"w-4 h-4\" />\n                      {day.toUpperCase()}\n                    </div>\n                  </th>\n                );\n              })}\n            </tr>\n          </thead>\n          \n          <tbody>\n            {timeSlots.map((timeSlot, timeIndex) => (\n              <tr key={timeIndex}>\n                {/* Enhanced Time Column */}\n                <td className={`border-2 border-indigo-200 p-4 text-center font-medium text-xs shadow-sm ${\n                  timeSlot.type === 'mentor' ? 'bg-gradient-to-r from-yellow-100 to-amber-100 border-yellow-300' : \n                  timeSlot.type === 'break' ? 'bg-gradient-to-r from-orange-100 to-red-100 border-orange-300' : \n                  'bg-gradient-to-r from-indigo-50 to-purple-50 border-indigo-200'\n                }`}>\n                  <div className={`font-bold text-sm ${\n                    timeSlot.type === 'mentor' ? 'text-yellow-800' :\n                    timeSlot.type === 'break' ? 'text-orange-800' : 'text-indigo-800'\n                  }`}>{timeSlot.label}</div>\n                  <div className={`text-xs mt-1 ${\n                    timeSlot.type === 'mentor' ? 'text-yellow-600' :\n                    timeSlot.type === 'break' ? 'text-orange-600' : 'text-indigo-600'\n                  }`}>{timeSlot.time}</div>\n                </td>\n\n                {/* Enhanced Day Columns */}\n                {days.map((day, dayIndex) => {\n                  // Handle special cases with enhanced styling\n                  if (timeSlot.type === 'mentor') {\n                    return (\n                      <td key={`${day}-${timeIndex}`} className=\"border-2 border-yellow-300 p-3 text-center bg-gradient-to-br from-yellow-100 to-amber-100 shadow-sm\">\n                        <div className=\"flex items-center justify-center gap-2\">\n                          <User className=\"w-3 h-3 text-yellow-700\" />\n                          <div className=\"text-xs font-bold text-yellow-800\">Mentor Time</div>\n                        </div>\n                      </td>\n                    );\n                  }\n                  \n                  if (timeSlot.type === 'break') {\n                    return (\n                      <td key={`${day}-${timeIndex}`} className=\"border-2 border-orange-300 p-3 text-center bg-gradient-to-br from-orange-100 to-red-100 shadow-sm\">\n                        <div className=\"flex items-center justify-center gap-2\">\n                          <Clock className=\"w-3 h-3 text-orange-700\" />\n                          <div className=\"text-xs font-bold text-orange-800\">LUNCH BREAK</div>\n                        </div>\n                      </td>\n                    );\n                  }\n\n                  // Get schedule item for this slot - handle different slot mappings\n                  let scheduleItem = null;\n                  let subject = null;\n                  \n                  // Skip mentor time and lunch break slots for actual schedule lookup\n                  if (timeSlot.type === 'lecture') {\n                    // Map lecture slots to schedule slots (1-6)\n                    const lectureSlots = timeSlots.filter(slot => slot.type === 'lecture');\n                    const lectureIndex = lectureSlots.findIndex(slot => slot.label === timeSlot.label);\n                    const slotNumber = lectureIndex + 1;\n                    \n                    scheduleItem = scheduleMap.get(`${day}-${slotNumber}`);\n                    subject = scheduleItem ? availableSubjects.find(s => s.id === scheduleItem.subjectId) : null;\n                  }\n\n                  // Color scheme for subjects\n                  const subjectColors = [\n                    'from-blue-100 to-cyan-100 border-blue-300',\n                    'from-green-100 to-emerald-100 border-green-300',\n                    'from-purple-100 to-violet-100 border-purple-300',\n                    'from-pink-100 to-rose-100 border-pink-300',\n                    'from-indigo-100 to-blue-100 border-indigo-300',\n                    'from-yellow-100 to-amber-100 border-yellow-300',\n                    'from-red-100 to-pink-100 border-red-300',\n                    'from-teal-100 to-cyan-100 border-teal-300'\n                  ];\n\n                  const colorIndex = scheduleItem ? (dayIndex + timeIndex) % subjectColors.length : 0;\n\n                  return (\n                    <td key={`${day}-${timeIndex}`} className={`border-2 border-indigo-200 p-1 text-center min-h-[80px] shadow-sm transition-all hover:shadow-md ${\n                      scheduleItem && subject ? `bg-gradient-to-br ${subjectColors[colorIndex]}` : 'bg-gradient-to-br from-gray-50 to-gray-100'\n                    }`}>\n                      {scheduleItem && subject ? (\n                        <div className=\"p-2 h-full flex flex-col justify-center\">\n                          {/* Subject Code with Icon */}\n                          <div className=\"flex items-center justify-center gap-1 mb-1\">\n                            <BookOpen className=\"w-3 h-3 text-gray-600\" />\n                            <div className=\"font-bold text-xs text-gray-800\">\n                              {subject.code}\n                            </div>\n                          </div>\n                          \n                          {/* Subject Name */}\n                          <div className=\"text-xs text-gray-700 mb-2 leading-tight font-medium\">\n                            {subject.name}\n                          </div>\n                          \n                          {/* Room with Icon */}\n                          <div className=\"flex items-center justify-center gap-1 mb-1\">\n                            <MapPin className=\"w-3 h-3 text-blue-600\" />\n                            <div className=\"text-xs text-blue-700 font-semibold\">\n                              {scheduleItem.classroomId}\n                            </div>\n                          </div>\n                          \n                          {/* Faculty with Icon */}\n                          <div className=\"flex items-center justify-center gap-1 mb-1\">\n                            <User className=\"w-3 h-3 text-green-600\" />\n                            <div className=\"text-xs text-green-700 font-semibold\">\n                              {scheduleItem.facultyId}\n                            </div>\n                          </div>\n                          \n                          {/* Lab indicator with enhanced styling */}\n                          {subject.type === 'lab' && (\n                            <div className=\"inline-flex items-center gap-1 bg-gradient-to-r from-blue-500 to-purple-500 text-white px-2 py-1 rounded-full text-xs font-bold mt-1\">\n                              <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                              LAB\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"text-xs text-gray-400 p-4 font-medium\">-</div>\n                      )}\n                    </td>\n                  );\n                })}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Enhanced Subject List Footer */}\n      <div className=\"bg-gradient-to-r from-indigo-50 via-purple-50 to-pink-50 border-t-2 border-indigo-300 p-6\">\n        <div className=\"flex items-center gap-3 mb-4\">\n          <div className=\"w-8 h-8 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full flex items-center justify-center\">\n            <BookOpen className=\"w-4 h-4 text-white\" />\n          </div>\n          <h3 className=\"font-bold text-lg text-indigo-800\">Subject List</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n          {availableSubjects.slice(0, 10).map((subject, index) => (\n            <div key={subject.id} className=\"flex items-center gap-3 bg-white/60 backdrop-blur-sm rounded-lg p-3 border border-indigo-200 shadow-sm hover:shadow-md transition-all\">\n              <div className=\"w-6 h-6 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full flex items-center justify-center text-xs font-bold\">\n                {index + 1}\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"font-bold text-sm text-indigo-800\">{subject.code}</div>\n                <div className=\"text-xs text-gray-600\">{subject.name}</div>\n              </div>\n              {subject.type === 'lab' && (\n                <div className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs font-semibold\">\n                  LAB\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction TimetableView() {\n  const { user } = useAuth();\n  const { currentTimetable, updates, liveClasses, markUpdateAsRead, joinLiveClass } = useRealtime();\n  const { toast } = useToast();\n  \n  if (!user) return null;\n\n  // Get unread updates for this user\n  const readUpdates = JSON.parse(localStorage.getItem('readUpdates') || '[]');\n  const unreadUpdates = updates.filter(update => \n    update.affectedUsers.includes(user.role) && \n    !readUpdates.includes(update.id)\n  );\n\n  // Get active live classes\n  const activeLiveClasses = liveClasses.filter(cls => cls.status === 'live');\n\n  // Auto-refresh when currentTimetable changes\n  useEffect(() => {\n    if (currentTimetable) {\n      console.log('📅 Student/Faculty received new timetable internally:', currentTimetable);\n      toast({\n        title: \"📅 Live Timetable Sync\",\n        description: \"New timetable received from admin panel in real-time\",\n      });\n    }\n  }, [currentTimetable, toast]);\n\n  // Listen for internal timetable updates\n  useEffect(() => {\n    const handleInternalSync = (e) => {\n      console.log('🔄 Internal sync event received in student/faculty view:', e.detail);\n      toast({\n        title: \"⚡ Real-Time Update\",\n        description: \"Timetable synchronized internally from admin\",\n      });\n    };\n\n    window.addEventListener('internalTimetableUpdate', handleInternalSync);\n    \n    return () => {\n      window.removeEventListener('internalTimetableUpdate', handleInternalSync);\n    };\n  }, [toast]);\n\n  return (\n    <div className=\"space-y-4 sm:space-y-6\">\n      {/* Header */}\n      <div className=\"relative overflow-hidden rounded-xl sm:rounded-2xl bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 p-4 sm:p-8 border border-blue-100/50 shadow-lg\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-blue-400/10 via-purple-400/10 to-pink-400/10\"></div>\n        <div className=\"relative z-10\">\n          <h2 className=\"text-xl sm:text-3xl font-bold tracking-tight bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent\">\n            {user.role === 'student' ? 'My Timetable' : 'Faculty Schedule'}\n          </h2>\n          <p className=\"text-gray-600 text-sm sm:text-lg mt-2\">\n            Real-time updates from administration\n          </p>\n        </div>\n      </div>\n\n      {/* Live Classes Alert */}\n      {activeLiveClasses.length > 0 && (\n        <Card className=\"bg-gradient-to-r from-red-50 to-pink-50 border-2 border-red-200 shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-red-800\">\n              <div className=\"w-3 h-3 bg-red-500 rounded-full animate-pulse\"></div>\n              Live Classes Now\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {activeLiveClasses.map(cls => (\n                <div key={cls.id} className=\"flex items-center justify-between bg-white p-4 rounded-lg border border-red-200\">\n                  <div>\n                    <div className=\"font-bold text-red-800\">{cls.subjectName}</div>\n                    <div className=\"text-sm text-gray-600\">{cls.room} • {cls.facultyName}</div>\n                    <div className=\"text-xs text-red-600\">{cls.startTime} - {cls.endTime}</div>\n                  </div>\n                  <Button \n                    onClick={() => joinLiveClass(cls.id)}\n                    className=\"bg-gradient-to-r from-red-500 to-pink-500 hover:from-red-600 hover:to-pink-600\"\n                  >\n                    <Play className=\"w-4 h-4 mr-2\" />\n                    Join Class\n                  </Button>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Unread Updates */}\n      {unreadUpdates.length > 0 && (\n        <Card className=\"bg-gradient-to-r from-yellow-50 to-amber-50 border-2 border-yellow-200 shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-yellow-800\">\n              <Bell className=\"w-5 h-5\" />\n              New Updates ({unreadUpdates.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {unreadUpdates.slice(0, 3).map(update => (\n                <div key={update.id} className=\"flex items-center justify-between bg-white p-4 rounded-lg border border-yellow-200\">\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-yellow-800\">\n                      {update.type === 'timetable_change' && '📅 Timetable Updated'}\n                      {update.type === 'live_class' && '🔴 Live Class'}\n                      {update.type === 'announcement' && '📢 Announcement'}\n                    </div>\n                    <div className=\"text-sm text-gray-600 mt-1\">{update.message}</div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {new Date(update.timestamp).toLocaleString()}\n                    </div>\n                  </div>\n                  <Button \n                    onClick={() => {\n                      markUpdateAsRead(update.id);\n                      toast({\n                        title: \"Update marked as read\",\n                        description: \"Update has been marked as read\",\n                      });\n                    }}\n                    size=\"sm\"\n                    variant=\"outline\"\n                    className=\"border-yellow-300 text-yellow-700 hover:bg-yellow-50\"\n                  >\n                    <CheckCircle className=\"w-3 h-3 mr-1\" />\n                    Mark Read\n                  </Button>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      \n      {/* Current Timetable */}\n      <Card className=\"bg-white shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <BookOpen className=\"h-5 w-5 text-blue-500\" />\n            Current Weekly Schedule\n            {currentTimetable && (\n              <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                Live Connected\n              </Badge>\n            )}\n          </CardTitle>\n          <CardDescription>\n            {currentTimetable ? 'Latest timetable from administration - Real-time sync active' : 'Waiting for admin to publish timetable'}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {currentTimetable ? (\n            <div className=\"mt-4\">\n              <div className=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\n                <div className=\"flex items-center gap-2 text-green-800\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                  <span className=\"text-sm font-medium\">Live Timetable - Updated in real-time from admin panel</span>\n                </div>\n              </div>\n              <ProfessionalTimetableGrid \n                schedule={currentTimetable.result[0].schedule} \n                availableSubjects={availableSubjects}\n              />\n            </div>\n          ) : (\n            <div className=\"text-center text-gray-500 py-8\">\n              <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                <div className=\"flex items-center justify-center gap-2 text-blue-800\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\n                  <span className=\"text-sm font-medium\">Real-time connection active - Waiting for admin</span>\n                </div>\n              </div>\n              <Calendar className=\"w-16 h-16 mx-auto mb-4 text-gray-300\" />\n              <p className=\"text-lg font-medium\">No timetable published yet</p>\n              <p className=\"text-sm mt-2\">Admin will publish timetable and it will appear here instantly</p>\n              <Button \n                variant=\"outline\" \n                className=\"mt-4\"\n                onClick={() => {\n                  const stored = localStorage.getItem('currentTimetable');\n                  if (stored) {\n                    toast({\n                      title: \"🔄 Checking for updates\",\n                      description: \"Looking for latest timetable from admin\",\n                    });\n                  }\n                }}\n              >\n                <BookOpen className=\"w-4 h-4 mr-2\" />\n                Check for Updates\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Connection Status */}\n      <div className=\"text-center text-xs text-gray-500\">\n        <div className=\"flex items-center justify-center gap-2\">\n          <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n          Connected to real-time updates\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function TimetablePage() {\n  const { user } = useAuth();\n  \n  if (!user) return null;\n\n  // Restrict faculty access to timetable\n  if (user.role === 'faculty') {\n    return (\n      <div className=\"p-8 text-center\">\n        <h2 className=\"text-xl font-semibold text-gray-600\">Access Restricted</h2>\n        <p className=\"text-gray-500 mt-2\">Faculty members do not have access to the timetable section. Please use your schedule from the Faculty menu.</p>\n      </div>\n    );\n  }\n\n  try {\n    // For students and admin, show their timetable\n    return <TimetableView />;\n  } catch (error) {\n    console.error('Error in TimetablePage:', error);\n    return (\n      <div className=\"p-8 text-center\">\n        <h2 className=\"text-xl font-semibold text-red-600\">Error Loading Timetable</h2>\n        <p className=\"text-gray-600 mt-2\">Please refresh the page or contact support.</p>\n      </div>\n    );\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}